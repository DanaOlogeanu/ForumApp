
@page "/SinglePost/{id:int}"  
@using HttpClients.ClientInterfaces
@using Domain.Models
@using Domain.DTOs
@inject IPostService postService

<!-- {int:id} ????  "SinglePost/{int:id}-->

<h3>Selected Post</h3>

<!-- id sould be remembered not input, from another page -->
<!--=   <div class="filter">
               <label>Post Id:</label>
                <input type="text" @bind=" "/>
            </div> 
---------->
<!--<div>
    <button @onclick="  ">Load</button> //LoadPost
</div> -->

@if (post == null)
{
    <p>No posts to display</p>
}
else
{
    <div class="table-container">
    <table class="table">
        @* <tr> *@
        @*     <td>@post.Id</td> *@
        @* </tr> *@
       
        <tr>
            <td class="title">@post.Title</td>
        </tr>
        <tr>
            
            <td class="owner">By @post.OwnerName</td>
        </tr>
        <tr>
            <td class="body">@post.Body</td>
        </tr>
    </table>
    </div>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private PostBasicDto post;
   // private int postId;
   private string msg = "";
    
    // private async Task LoadPost()
    // {
    //     try
    //     {
    //         post = await postService.GetByIdAsync(@Id);
    //         
    //     }
    //     catch (Exception e)
    //     {
    //         Console.WriteLine(e);
    //         msg = e.Message;
    //     }
    // }
    protected override async Task OnInitializedAsync()  //loading when page opens
    {
        msg = "";
        try
        {
            post = await postService.GetByIdAsync(@Id);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
}
